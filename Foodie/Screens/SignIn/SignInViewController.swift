//
//  SignInViewController.swift
//  Foodie
//
//  Created by Gaga Nizharadze on 20.09.22.
//  Copyright (c) 2022 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol SignInDisplayLogic: AnyObject {
    func displayErrorAlert(with response: SignIn.Something.Response)
    func displayMain()
}

class SignInViewController: UIViewController, SignInDisplayLogic {
    
    // MARK: - Outlets
    @IBOutlet weak var scrollView: UIScrollView!
    @IBOutlet weak var whiteView: UIView!
    @IBOutlet weak var logInButtonOutlet: UIButton!
    @IBOutlet weak var signUpButtonOutlet: UIButton!
    @IBOutlet weak var emailTextField: UITextField!
    @IBOutlet weak var passwordTextField: UITextField!
    
    
    //MARK: - Clean Components
    var interactor: SignInBusinessLogic?
    var router: (NSObjectProtocol & SignInRoutingLogic & SignInDataPassing)?
    
    static let identifier = String(describing: SignInViewController.self)
    
    // MARK: View lifecycle
    override func viewDidLoad() {
        super.viewDidLoad()
        self.scrollView.backgroundColor = UIColor(patternImage: CustomImages.backgroundImage!)
        
        whiteView.backgroundColor = .clear
        configureUIComponents()
        self.hideKeyboardWhenTappedAround()
    }
    
    // MARK: - Actions
    @IBAction func loginButton(_ sender: UIButton) {
        interactorCall()
    }
    
    @IBAction func signUpButtonAction(_ sender: UIButton) {
        router?.navigateToSignUpScreen()
    }
    
    
    // MARK: - Funcs
    private func configureUIComponents() {
        
        logInButtonOutlet.modifyButtons(color: CustomColors.specialOrangeColor!)
        signUpButtonOutlet.modifyButtons(color: CustomColors.specialYellowColor!)
        
        emailTextField.modifyTextFields()
        passwordTextField.modifyTextFields()
    }
    func interactorCall() {
        let request = SignIn.Something.Request(emailText: emailTextField.text, passwordText: passwordTextField.text)
        interactor?.signInLogic(request: request)
    }
    
    // MARK: Display Logics
    func displayErrorAlert(with response: SignIn.Something.Response) {
        self.presentAlert(title: "Error", message: response.errorMessage)
    }
    
    func displayMain() {
        router?.navigateToMainScreen()
    }
}


extension SignInViewController: SignUpViewControllerDelegate {
    func presentCGMessage() {
        self.presentAlert(title: "Congratulations", message: "You have successfully registered ðŸŽ‰")
    }
}
